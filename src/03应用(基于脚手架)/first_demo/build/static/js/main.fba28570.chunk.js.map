{"version":3,"sources":["redux/constant.js","redux/Action/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/Action/person.js","App.jsx","redux/Reducers/person.js","redux/Reducers/index.js","redux/Reducers/count.js","redux/store.js","index.jsx"],"names":["INCREMENT","DECREMENT","ADD_PERSON","increment","data","type","Count","value","selectNumber","props","add","decrement","sub","incrementIfOdd","count","incrementIfAsync","addAsync","this","personCount","ref","c","onClick","Component","connect","state","sum","people","length","timer","dispatch","setTimeout","Person","addPerson","personObj","name","nameNode","age","ageNode","id","nanoid","console","log","placeholder","personArr","map","p","App","initState","combineReducers","preState","action","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","createRoot","document","getElementById","render","store"],"mappings":"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","file":"static/js/main.fba28570.chunk.js","sourcesContent":["export const INCREMENT = 'add';\r\nexport const DECREMENT = 'sub';\r\nexport const ADD_PERSON = 'add_person';\r\n","import { INCREMENT, DECREMENT } from '../constant';\r\n// 同步action\r\nexport const increment = data => ({ type: INCREMENT, data });\r\nexport const decrement = data => ({ type: DECREMENT, data });\r\n// 异步action\r\nexport const incrementAsync = (data, timer) => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(increment(data));\r\n    }, timer);\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\n// 引入action\r\nimport { increment, decrement, incrementAsync } from '../../redux/Action/count';\r\n// 引入connect\r\nimport { connect } from 'react-redux';\r\n// const mapStateToProps = state => ({ count: state });\r\n// const mapDispatchToProps = dispatch => ({\r\n//   add: val => {\r\n//     dispatch(createIncrementAction(val));\r\n//   },\r\n//   addAsync: (val, time) => {\r\n//     dispatch(createIncrementAsyncAction(val, time));\r\n//   },\r\n//   : val => {\r\n//     dispatch(createDecrementAction(val));\r\n//   },\r\n// });\r\nclass Count extends Component {\r\n  // 加\r\n  increment = () => {\r\n    const { value } = this.selectNumber;\r\n    this.props.add(value * 1);\r\n  };\r\n  // 减\r\n  decrement = () => {\r\n    const { value } = this.selectNumber;\r\n    this.props.sub(value * 1);\r\n  };\r\n  // 奇数再加\r\n  incrementIfOdd = () => {\r\n    const { value } = this.selectNumber;\r\n    if (this.props.count % 2 !== 0) {\r\n      this.props.add(value * 1);\r\n    }\r\n  };\r\n  // 异步加\r\n  incrementIfAsync = () => {\r\n    const { value } = this.selectNumber;\r\n    this.props.addAsync(value * 1, 500);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          求和为：{this.props.count}，下方组件人数为：{this.props.personCount}\r\n        </h1>\r\n        <select ref={c => (this.selectNumber = c)}>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n        &nbsp;\r\n        <button onClick={this.increment}>+</button> &nbsp;\r\n        <button onClick={this.decrement}>-</button> &nbsp;\r\n        <button onClick={this.incrementIfOdd}>当前求和为奇数再加</button> &nbsp;\r\n        <button onClick={this.incrementIfAsync}>异步加</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// 暴露容器组件\r\nexport default connect(state => ({ count: state.sum, personCount: state.people.length }), {\r\n  add: increment,\r\n  addAsync: incrementAsync,\r\n  sub: decrement,\r\n})(Count);\r\n","import React, { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { connect } from 'react-redux';\r\nimport { addPerson } from '../../redux/Action/person';\r\nclass Person extends Component {\r\n  addPerson = () => {\r\n    const name = this.nameNode.value;\r\n    const age = this.ageNode.value;\r\n    const personObj = { name, age, id: nanoid() };\r\n    console.log(personObj);\r\n    this.props.addPerson(personObj);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>上方组件求和为：{this.props.sum}</h3>\r\n        <input ref={c => (this.nameNode = c)} type=\"text\" placeholder=\"输入名字\" />\r\n        <input ref={c => (this.ageNode = c)} type=\"text\" placeholder=\"输入年龄\" />\r\n        <button onClick={this.addPerson}>添加</button>\r\n        <ul>\r\n          {this.props.personArr.map(p => {\r\n            return (\r\n              <li key={p.id}>\r\n                {p.name}---{p.age}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(state => ({ personArr: state.people, sum: state.sum }), { addPerson })(Person);\r\n","import { ADD_PERSON } from '../constant';\r\n// 增加一个人的action\r\nexport const addPerson = personObj => ({ type: ADD_PERSON, data: personObj });\r\n","import React, { Component } from 'react';\r\nimport Count from './containers/Count'; //count容器组件\r\nimport Person from './containers/Person';\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Count />\r\n        <hr />\r\n        <Person />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { ADD_PERSON } from '../constant';\r\n// 初始化\r\nconst initState = [{ name: 'tom', age: 18, id: '001' }];\r\nexport default function personReducer(preState = initState, action) {\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case ADD_PERSON:\r\n      return [data, ...preState];\r\n    default:\r\n      return preState;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport countReducer from './count';\r\nimport personReducer from './person';\r\nexport default combineReducers({ sum: countReducer, people: personReducer });\r\n","/**\r\n *\r\n * @param {*} preState 之前的状态\r\n * @param {*} action 动作对象\r\n */\r\nimport { INCREMENT, DECREMENT } from '../constant';\r\nexport default function countReducer(preState = 0, action) {\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case INCREMENT:\r\n      return preState + data;\r\n    case DECREMENT:\r\n      return preState - data;\r\n    default:\r\n      return preState;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from './Reducers';\r\n// 引入thunk支持异步action\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n","import React from 'react';\r\n// import ReactDOM from \"react-dom\";\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(\r\n  // 让app的所以子组件都能接收store\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n// store.subscribe(() => {\r\n//   root.render(<App />);\r\n// });\r\n// ReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}